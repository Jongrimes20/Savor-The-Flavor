DROP DATABASE IF EXISTS SAVOR_THE_FLAVOR;

CREATE DATABASE SAVOR_THE_FLAVOR;

USE SAVOR_THE_FLAVOR;

# CREATION OF EMPLOYEE TABLE
DROP TABLE IF EXISTS EMPLOYEE;

CREATE TABLE EMPLOYEE (
    EID INT NOT NULL,
    SSN CHAR(9) NOT NULL,
    POSITION CHAR(9),
    SEX CHAR(1),
    EMPLOYEE_NAME VARCHAR(50) NOT NULL,
    PHONE_NUMBER CHAR(10),
    ADDRESS VARCHAR(50),
    PRIMARY KEY (EID)
);

# CREATION OF INVENTORY TABLE
DROP TABLE IF EXISTS INVENTORY;

# NOTE: FOREIGN KEY FOR SUPPLIER_ID HAS BEEN ADDED AFTER SUPPLIERS TABLE HAS BEEN CREATED
CREATE TABLE INVENTORY (
    INVENTORY_ITEM_ID INT NOT NULL,
    INVENTORY_ITEM_NAME VARCHAR(100) NOT NULL,
    COUNT INT,
    SUPPLIER_ID INT NOT NULL,
    PRIMARY KEY (INVENTORY_ITEM_ID)
);

# CREATION OF MENU_ITEMS TABLE
DROP TABLE IF EXISTS MENU_ITEMS;

CREATE TABLE MENU_ITEMS (
    MENU_ITEM_ID INT NOT NULL,
    MENU_ITEM_NAME VARCHAR(100) NOT NULL,
    COST DECIMAL(5, 2) NOT NULL DEFAULT 20.00,
    PRIMARY KEY (MENU_ITEM_ID)
);

# CREATION OF MENU_ITEMS_INGREDIENTS_LIST TABLE
DROP TABLE IF EXISTS MENU_ITEMS_INGREDIENTS_LIST;

CREATE TABLE MENU_ITEMS_INGREDIENTS_LIST (
    MENU_ITEM_ID INT NOT NULL,
    INGREDIENT VARCHAR(50),
    PRIMARY KEY (MENU_ITEM_ID)
);

# CREATION OF CUSTOMER_INFORMATION TABLE
DROP TABLE IF EXISTS CUSTOMER_INFORMATION;

CREATE TABLE CUSTOMER_INFORMATION (
    CUSTOMER_ID INT NOT NULL,
    PHONE_NUMBER CHAR(10),
    CUSTOMER_NAME VARCHAR(50) NOT NULL,
    -- ORDERS INT DEFAULT 0,
    PRIMARY KEY (CUSTOMER_ID)
);

# CREATION OF CUSTOMER_TRANSACTIONS TABLE
DROP TABLE IF EXISTS CUSTOMER_TRANSACTIONS;

CREATE TABLE CUSTOMER_TRANSACTIONS (
    CUSTOMER_TRANSACTION_ID INT NOT NULL,
    CUSTOMER_ID INT,
    CUSTOMER_TOTAL_COST DECIMAL(6, 2) NOT NULL,
    WAITER_ID INT,
    PRIMARY KEY (CUSTOMER_TRANSACTION_ID),
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER_INFORMATION (CUSTOMER_ID) ON DELETE
    SET
        NULL ON UPDATE CASCADE,
        FOREIGN KEY (WAITER_ID) REFERENCES EMPLOYEE (EID) ON DELETE
    SET
        NULL ON UPDATE CASCADE
);

# CREATION OF CUSTOMER_ORDERED_ITEMS TABLE
DROP TABLE IF EXISTS CUSTOMER_ORDERED_ITEMS;

CREATE TABLE CUSTOMER_ORDERED_ITEMS (
    CUSTOMER_ID INT NOT NULL,
    MENU_ITEM_ID INT NOT NULL,
    PRIMARY KEY (CUSTOMER_ID, MENU_ITEM_ID),
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER_INFORMATION (CUSTOMER_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (MENU_ITEM_ID) REFERENCES MENU_ITEMS (MENU_ITEM_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

# CREATION OF SUPPLIERS TABLE
DROP TABLE IF EXISTS SUPPLIERS;

CREATE TABLE SUPPLIERS (
    SUPPLIER_ID INT NOT NULL,
    SUPPLIER_NAME VARCHAR(30) NOT NULL,
    SUPPLIER_ADDRESS VARCHAR(50),
    SUPPLIER_PHONE_NUMBER CHAR(10),
    PRIMARY KEY (SUPPLIER_ID)
);

# NOTE: FOREIGN KEY FOR SUPPLIER_ID HAS BEEN CREATED HERE
ALTER TABLE
    INVENTORY
ADD
    FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIERS(SUPPLIER_ID);

# CREATION OF SUPPLIER_TRANSACTIONS TABLE
DROP TABLE IF EXISTS SUPPLIER_TRANSACTIONS;

CREATE TABLE SUPPLIER_TRANSACTIONS (
    SUPPLIER_ID INT NOT NULL,
    SUPPLIER_TRANSACTION_ID INT NOT NULL,
    SUPPLIER_TOTAL_COST DECIMAL(6, 2),
    PRIMARY KEY (SUPPLIER_TRANSACTION_ID),
    FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIERS (SUPPLIER_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

# CREATION OF COMPANY_ORDERED_ITEMS TABLE
DROP TABLE IF EXISTS COMPANY_ORDERED_ITEMS;

CREATE TABLE COMPANY_ORDERED_ITEMS (
    SUPPLIER_ID INT NOT NULL,
    INVENTORY_ITEM_ID INT NOT NULL,
    ORDERED_EMPLOYEE_ID INT,
    PRIMARY KEY (SUPPLIER_ID, INVENTORY_ITEM_ID),
    FOREIGN KEY (INVENTORY_ITEM_ID) REFERENCES INVENTORY (INVENTORY_ITEM_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ORDERED_EMPLOYEE_ID) REFERENCES EMPLOYEE (EID) ON DELETE
    SET
        NULL ON UPDATE CASCADE
);
